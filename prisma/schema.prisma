generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 原始流量数据表
model Packet {
  id          Int      @id @default(autoincrement())
  timestamp   DateTime @default(now())
  sourceMac   String?
  destinationMac String?
  sourceIp    String
  destinationIp String
  protocol    String
  sourcePort  Int
  destinationPort Int
  length      Int
  tcpFlags    String?
  payload     String?
  applicationData String? // 应用层协议信息(HTTP, TLS, DNS等)
  rawData     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // 关联分析结果
  analysis    Analysis?
  // 关联异常记录
  anomalies   Anomaly[]
}

// 流量分析结果表
model Analysis {
  id          Int      @id @default(autoincrement())
  packetId    Int      @unique
  packet      Packet   @relation(fields: [packetId], references: [id])
  isMalicious Boolean  @default(false)
  threatType  String?
  confidence  Float
  features    Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// 流量特征表
model TrafficFeature {
  id          Int      @id @default(autoincrement())
  timestamp   DateTime @default(now())
  featureType String
  value       Float
  metadata    Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// 异常记录表
model Anomaly {
  id          Int      @id @default(autoincrement())
  timestamp   DateTime @default(now())
  type        String
  severity    String
  description String
  packetId    Int?
  packet      Packet?  @relation(fields: [packetId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// 系统日志表
model SystemLog {
  id          Int      @id @default(autoincrement())
  timestamp   DateTime @default(now())
  logType     String   // SYSTEM_START, SYSTEM_STOP, API_ACCESS, ERROR, WARNING 等
  source      String   // 日志来源模块
  message     String   // 日志消息
  metadata    Json?    // 附加信息
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}